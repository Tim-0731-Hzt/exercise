apiVersion: v1
kind: Service
metadata:
  annotations:
    "mesh-timeout": "2s"
  name: app-4
  labels:
    meshed: "enabled"
spec:
  selector:
    app: app-4
  ports:
    - protocol: TCP
      appProtocol: http
      port: 9090
      targetPort: 8000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-4
  labels:
    app: app-4
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app-4
  template:
    metadata:
      labels:
        app: app-4
    spec:
      initContainers:
        - name: envoy-config-init
          image: busybox
          command:
            - /bin/sh
            - -c
            - |
              cat <<EOF > /config/bootstrap.yaml
              admin:
                address:
                  socket_address:
                    address: "${ENVOY_ADMIN_ADDRESS}"
                    port_value: ${ENVOY_ADMIN_PORT}
              node:
                cluster: mesh
                id: app-4
              dynamicResources:
                adsConfig:
                  apiType: GRPC
                  grpcServices:
                    - envoyGrpc:
                        clusterName: ads_cluster
                  setNodeOnFirstMessageOnly: true
                  transportApiVersion: V3
                cdsConfig:
                  ads: {}
                  resourceApiVersion: V3
                ldsConfig:
                  ads: {}
                  resourceApiVersion: V3
              static_resources:
                listeners:
                  - address:
                      socket_address:
                        address: 0.0.0.0
                        port_value: 8000
                    filter_chains:
                      - filters:
                          - name: envoy.filters.network.http_connection_manager
                            typed_config:
                              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                              codec_type: auto
                              stat_prefix: inbound
                              route_config:
                                name: local_route
                                virtual_hosts:
                                  - name: service
                                    domains:
                                      - "*"
                                    routes:
                                      - match:
                                          prefix: "/"
                                        route:
                                          cluster: inbound
                              http_filters:
                                - name: envoy.filters.http.router
                                  typed_config:
                                    "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                  - address:
                      socket_address:
                        address: 0.0.0.0
                        port_value: 8001
                    filter_chains:
                      - filters:
                          - name: envoy.filters.network.http_connection_manager
                            typed_config:
                              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                              codec_type: auto
                              stat_prefix: outbound
                              rds:
                                route_config_name: outbound_route
                                config_source:
                                  ads: {}
                                  resourceApiVersion: V3
                              http_filters:
                                - name: envoy.filters.http.router
                                  typed_config:
                                    "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                clusters:
                  - name: inbound
                    loadAssignment:
                      clusterName: inbound
                      endpoints:
                        - lbEndpoints:
                            - endpoint:
                                address:
                                  socketAddress:
                                    address: 127.0.0.1
                                    portValue: 9090
                  - name: ads_cluster
                    connectTimeout: 1s
                    type: strict_dns
                    lb_policy: ROUND_ROBIN
                    upstream_connection_options:
                      tcp_keepalive: {}
                    typed_extension_protocol_options:
                      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
                        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
                        explicit_http_config:
                          http2_protocol_options:
                            connection_keepalive:
                              interval: 30s
                              timeout: 5s
                    loadAssignment:
                      clusterName: ads_cluster
                      endpoints:
                        - lbEndpoints:
                            - endpoint:
                                address:
                                  socketAddress:
                                    address: bear-kong-cp
                                    portValue: 5000
              EOF
          env:
            - name: ENVOY_ADMIN_ADDRESS
              value: "127.0.0.1"
            - name: ENVOY_ADMIN_PORT
              value: "8081"
          volumeMounts:
            - name: config
              mountPath: /config
      containers:
        - name: envoy
          image: envoyproxy/envoy:v1.26.1
          args:
            - "--config-path"
            - "/config/bootstrap.yaml"
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
        - name: fake-service
          image: nicholasjackson/fake-service:v0.25.2
          env:
            - name: NAME
              value: app-4
          ports:
            - containerPort: 9090
        - name: netshoot
          image: nicolaka/netshoot
          command: [ "/bin/bash" ]
          args: [ "-c", "while true; do ping localhost; sleep 60;done" ]
      volumes:
        - name: config
          emptyDir: {}
